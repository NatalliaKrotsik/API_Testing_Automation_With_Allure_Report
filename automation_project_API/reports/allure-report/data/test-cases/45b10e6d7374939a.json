{"uid":"45b10e6d7374939a","name":"Verify that user with ID 1 can be fetched successfully","fullName":"tests.test_users_api#test_get_user_by_id","historyId":"3ec43f87416c2bd041efeb5019e120b7","time":{"start":1747035983891,"stop":1747035984050,"duration":159},"status":"failed","statusMessage":"AssertionError: assert 404 == 200\n +  where 404 = <Response [404]>.status_code","statusTrace":"config = {'api_base_url': 'https://reqres.in/', 'api_base_url2': 'https://jsonplaceholder.typicode.com/'}\n\n    @allure.epic(\"User Management API\")\n    @allure.feature(\"GET /users/{id}\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.title(\"Verify that user with ID 1 can be fetched successfully\")\n    def test_get_user_by_id(config):\n        client = UserClient(config[\"api_base_url\"])\n        response = client.get_user(1)\n    \n        with allure.step(\"Check response code and user data\"):\n>           assert response.status_code == 200\nE           assert 404 == 200\nE            +  where 404 = <Response [404]>.status_code\n\ntests\\test_users_api.py:14: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"config","time":{"start":1747035981012,"stop":1747035981020,"duration":8},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false},{"name":"_configure_application","time":{"start":1747035983890,"stop":1747035983890,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false},{"name":"_monkeypatch_response_class","time":{"start":1747035983890,"stop":1747035983890,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false},{"name":"_push_request_context","time":{"start":1747035983890,"stop":1747035983890,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false},{"name":"monkeypatch","time":{"start":1747035983890,"stop":1747035983890,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 404 == 200\n +  where 404 = <Response [404]>.status_code","statusTrace":"config = {'api_base_url': 'https://reqres.in/', 'api_base_url2': 'https://jsonplaceholder.typicode.com/'}\n\n    @allure.epic(\"User Management API\")\n    @allure.feature(\"GET /users/{id}\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.title(\"Verify that user with ID 1 can be fetched successfully\")\n    def test_get_user_by_id(config):\n        client = UserClient(config[\"api_base_url\"])\n        response = client.get_user(1)\n    \n        with allure.step(\"Check response code and user data\"):\n>           assert response.status_code == 200\nE           assert 404 == 200\nE            +  where 404 = <Response [404]>.status_code\n\ntests\\test_users_api.py:14: AssertionError","steps":[{"name":"Check response code and user data","time":{"start":1747035984050,"stop":1747035984050,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 404 == 200\n +  where 404 = <Response [404]>.status_code\n","statusTrace":"  File \"C:\\Users\\n.krotsik\\Desktop\\Pytest\\automation_project_API\\tests\\test_users_api.py\", line 14, in test_get_user_by_id\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"stepsCount":1,"attachmentStep":false,"hasContent":true},"afterStages":[{"name":"monkeypatch::0","time":{"start":1747035984055,"stop":1747035984055,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false}],"labels":[{"name":"severity","value":"critical"},{"name":"epic","value":"User Management API"},{"name":"feature","value":"GET /users/{id}"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_users_api"},{"name":"host","value":"PLWRS-PF43AQAR"},{"name":"thread","value":"9948-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_users_api"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"45b10e6d7374939a.json","parameterValues":[]}