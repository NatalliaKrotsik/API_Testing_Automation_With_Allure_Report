{"uid":"f5932ad559ff339f","name":"test_get_nonexistent_user[9999]","fullName":"tests.test_users_api#test_get_nonexistent_user","historyId":"9dd4227a1a891731594d45b2a96bf0d7","time":{"start":1746614880169,"stop":1746614880327,"duration":158},"status":"failed","statusMessage":"AssertionError: assert '<!DOCTYPE ht...y>\\n</html>\\n' == '{}'\n  \n  - {}\n  + <!DOCTYPE html>\n  + <html lang=\"en\">\n  +     <head>\n  +         <!-- Google Tag Manager -->\n  +         <script>...\n  \n  ...Full output truncated (123 lines hidden), use '-vv' to show","statusTrace":"config = {'api_base_url': 'https://reqres.in/', 'api_base_url2': 'https://jsonplaceholder.typicode.com/'}, invalid_id = 9999\n\n    @allure.feature(\"Negative Test - GET /users/{invalid_id}\")\n    @pytest.mark.parametrize(\"invalid_id\", [0, 9999, \"abc\"])\n    def test_get_nonexistent_user(config, invalid_id):\n        client = UserClient(config[\"api_base_url\"])\n        response = client.get_user(invalid_id)\n    \n        with allure.step(f\"Verify 404 for invalid user ID: {invalid_id}\"):\n            assert response.status_code == 404\n>           assert response.text == \"{}\"  # JSONPlaceholder returns an empty object\nE           assert '<!DOCTYPE ht...y>\\n</html>\\n' == '{}'\nE             \nE             - {}\nE             + <!DOCTYPE html>\nE             + <html lang=\"en\">\nE             +     <head>\nE             +         <!-- Google Tag Manager -->\nE             +         <script>...\nE             \nE             ...Full output truncated (123 lines hidden), use '-vv' to show\n\ntests\\test_users_api.py:42: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"config","time":{"start":1746614876569,"stop":1746614876569,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false},{"name":"_push_request_context","time":{"start":1746614880168,"stop":1746614880168,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false},{"name":"monkeypatch","time":{"start":1746614880168,"stop":1746614880168,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false},{"name":"_configure_application","time":{"start":1746614880168,"stop":1746614880168,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false},{"name":"_monkeypatch_response_class","time":{"start":1746614880168,"stop":1746614880168,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert '<!DOCTYPE ht...y>\\n</html>\\n' == '{}'\n  \n  - {}\n  + <!DOCTYPE html>\n  + <html lang=\"en\">\n  +     <head>\n  +         <!-- Google Tag Manager -->\n  +         <script>...\n  \n  ...Full output truncated (123 lines hidden), use '-vv' to show","statusTrace":"config = {'api_base_url': 'https://reqres.in/', 'api_base_url2': 'https://jsonplaceholder.typicode.com/'}, invalid_id = 9999\n\n    @allure.feature(\"Negative Test - GET /users/{invalid_id}\")\n    @pytest.mark.parametrize(\"invalid_id\", [0, 9999, \"abc\"])\n    def test_get_nonexistent_user(config, invalid_id):\n        client = UserClient(config[\"api_base_url\"])\n        response = client.get_user(invalid_id)\n    \n        with allure.step(f\"Verify 404 for invalid user ID: {invalid_id}\"):\n            assert response.status_code == 404\n>           assert response.text == \"{}\"  # JSONPlaceholder returns an empty object\nE           assert '<!DOCTYPE ht...y>\\n</html>\\n' == '{}'\nE             \nE             - {}\nE             + <!DOCTYPE html>\nE             + <html lang=\"en\">\nE             +     <head>\nE             +         <!-- Google Tag Manager -->\nE             +         <script>...\nE             \nE             ...Full output truncated (123 lines hidden), use '-vv' to show\n\ntests\\test_users_api.py:42: AssertionError","steps":[{"name":"Verify 404 for invalid user ID: 9999","time":{"start":1746614880324,"stop":1746614880326,"duration":2},"status":"failed","statusMessage":"AssertionError: assert '<!DOCTYPE ht...y>\\n</html>\\n' == '{}'\n  \n  - {}\n  + <!DOCTYPE html>\n  + <html lang=\"en\">\n  +     <head>\n  +         <!-- Google Tag Manager -->\n  +         <script>...\n  \n  ...Full output truncated (123 lines hidden), use '-vv' to show\n","statusTrace":"  File \"C:\\Users\\n.krotsik\\Desktop\\Pytest\\automation_project_API\\tests\\test_users_api.py\", line 42, in test_get_nonexistent_user\n    assert response.text == \"{}\"  # JSONPlaceholder returns an empty object\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"stepsCount":1,"attachmentStep":false,"hasContent":true},"afterStages":[{"name":"monkeypatch::0","time":{"start":1746614880334,"stop":1746614880334,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false}],"labels":[{"name":"feature","value":"Negative Test - GET /users/{invalid_id}"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_users_api"},{"name":"host","value":"PLWRS-PF43AQAR"},{"name":"thread","value":"13160-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_users_api"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"invalid_id","value":"9999"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"f5932ad559ff339f.json","parameterValues":["9999"]}