{"uid":"c20eb3ebe0bcf794","name":"Verify different users by ID and username","fullName":"tests.test_users_api#test_get_user_parametrized","historyId":"61bd95e1ec26222b8dfd7459cce0636f","time":{"start":1746614879860,"stop":1746614879994,"duration":134},"status":"failed","statusMessage":"AssertionError: assert 404 == 200\n +  where 404 = <Response [404]>.status_code","statusTrace":"config = {'api_base_url': 'https://reqres.in/', 'api_base_url2': 'https://jsonplaceholder.typicode.com/'}, user_id = 3, expected_username = 'Samantha'\n\n    @pytest.mark.parametrize(\"user_id, expected_username\", [\n        (1, \"Bret\"),\n        (2, \"Antonette\"),\n        (3, \"Samantha\")\n    ])\n    @allure.feature(\"GET /users/{id} with multiple inputs\")\n    @allure.title(\"Verify different users by ID and username\")\n    def test_get_user_parametrized(config, user_id, expected_username):\n        client = UserClient(config[\"api_base_url\"])\n        response = client.get_user(user_id)\n    \n        with allure.step(f\"Validate user ID: {user_id} and username: {expected_username}\"):\n>           assert response.status_code == 200\nE           assert 404 == 200\nE            +  where 404 = <Response [404]>.status_code\n\ntests\\test_users_api.py:31: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"config","time":{"start":1746614876569,"stop":1746614876569,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false},{"name":"_configure_application","time":{"start":1746614879860,"stop":1746614879860,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false},{"name":"_monkeypatch_response_class","time":{"start":1746614879860,"stop":1746614879860,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false},{"name":"monkeypatch","time":{"start":1746614879860,"stop":1746614879860,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false},{"name":"_push_request_context","time":{"start":1746614879860,"stop":1746614879860,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 404 == 200\n +  where 404 = <Response [404]>.status_code","statusTrace":"config = {'api_base_url': 'https://reqres.in/', 'api_base_url2': 'https://jsonplaceholder.typicode.com/'}, user_id = 3, expected_username = 'Samantha'\n\n    @pytest.mark.parametrize(\"user_id, expected_username\", [\n        (1, \"Bret\"),\n        (2, \"Antonette\"),\n        (3, \"Samantha\")\n    ])\n    @allure.feature(\"GET /users/{id} with multiple inputs\")\n    @allure.title(\"Verify different users by ID and username\")\n    def test_get_user_parametrized(config, user_id, expected_username):\n        client = UserClient(config[\"api_base_url\"])\n        response = client.get_user(user_id)\n    \n        with allure.step(f\"Validate user ID: {user_id} and username: {expected_username}\"):\n>           assert response.status_code == 200\nE           assert 404 == 200\nE            +  where 404 = <Response [404]>.status_code\n\ntests\\test_users_api.py:31: AssertionError","steps":[{"name":"Validate user ID: 3 and username: Samantha","time":{"start":1746614879993,"stop":1746614879994,"duration":1},"status":"failed","statusMessage":"AssertionError: assert 404 == 200\n +  where 404 = <Response [404]>.status_code\n","statusTrace":"  File \"C:\\Users\\n.krotsik\\Desktop\\Pytest\\automation_project_API\\tests\\test_users_api.py\", line 31, in test_get_user_parametrized\n    assert response.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"stepsCount":1,"attachmentStep":false,"hasContent":true},"afterStages":[{"name":"monkeypatch::0","time":{"start":1746614880005,"stop":1746614880005,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false}],"labels":[{"name":"feature","value":"GET /users/{id} with multiple inputs"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_users_api"},{"name":"host","value":"PLWRS-PF43AQAR"},{"name":"thread","value":"13160-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_users_api"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"expected_username","value":"'Samantha'"},{"name":"user_id","value":"3"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"c20eb3ebe0bcf794.json","parameterValues":["'Samantha'","3"]}