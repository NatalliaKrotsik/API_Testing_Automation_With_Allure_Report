{"uid":"a45b53fd348eed","name":"Simulate full flow of POST then DELETE a blog post","fullName":"tests.test_posts_api#test_create_and_delete_post","historyId":"2c7e433b3e7504ccca7f0e0fa2f37776","time":{"start":1747041850795,"stop":1747041850974,"duration":179},"status":"failed","statusMessage":"AssertionError: assert 404 == 201\n +  where 404 = <Response [404]>.status_code","statusTrace":"config = {'allure': {'build_name': 'Local Test Run', 'build_order': '1', 'executor_name': 'Local Machine', 'report_name': 'API ...tps://jsonplaceholder.typicode.com/', 'local_flask': 'http://127.0.0.1:5000/api', 'reqres': 'https://reqres.in/'}, ...}\n\n    @allure.feature(\"E2E: Create → Delete → (Optional) Verify Delete\")\n    @allure.title(\"Simulate full flow of POST then DELETE a blog post\")\n    def test_create_and_delete_post(config):\n        client = PostClient(config[\"api_base_url\"])\n    \n        # Step 1: Create a post\n        with allure.step(\"Create a new post\"):\n            response_create = client.create_post(\"QA Automation Post\", \"This post is for delete testing.\", 1)\n>           assert response_create.status_code == 201\nE           assert 404 == 201\nE            +  where 404 = <Response [404]>.status_code\n\ntests\\test_posts_api.py:69: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":14,"retriesStatusChange":true,"beforeStages":[{"name":"config","time":{"start":1747041847645,"stop":1747041847647,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false},{"name":"monkeypatch","time":{"start":1747041850794,"stop":1747041850794,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false},{"name":"_monkeypatch_response_class","time":{"start":1747041850794,"stop":1747041850794,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false},{"name":"_configure_application","time":{"start":1747041850794,"stop":1747041850794,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false},{"name":"_push_request_context","time":{"start":1747041850794,"stop":1747041850794,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 404 == 201\n +  where 404 = <Response [404]>.status_code","statusTrace":"config = {'allure': {'build_name': 'Local Test Run', 'build_order': '1', 'executor_name': 'Local Machine', 'report_name': 'API ...tps://jsonplaceholder.typicode.com/', 'local_flask': 'http://127.0.0.1:5000/api', 'reqres': 'https://reqres.in/'}, ...}\n\n    @allure.feature(\"E2E: Create → Delete → (Optional) Verify Delete\")\n    @allure.title(\"Simulate full flow of POST then DELETE a blog post\")\n    def test_create_and_delete_post(config):\n        client = PostClient(config[\"api_base_url\"])\n    \n        # Step 1: Create a post\n        with allure.step(\"Create a new post\"):\n            response_create = client.create_post(\"QA Automation Post\", \"This post is for delete testing.\", 1)\n>           assert response_create.status_code == 201\nE           assert 404 == 201\nE            +  where 404 = <Response [404]>.status_code\n\ntests\\test_posts_api.py:69: AssertionError","steps":[{"name":"Create a new post","time":{"start":1747041850795,"stop":1747041850973,"duration":178},"status":"failed","statusMessage":"AssertionError: assert 404 == 201\n +  where 404 = <Response [404]>.status_code\n","statusTrace":"  File \"C:\\Users\\n.krotsik\\Desktop\\Pytest\\automation_project_API\\tests\\test_posts_api.py\", line 69, in test_create_and_delete_post\n    assert response_create.status_code == 201\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"stepsCount":1,"attachmentStep":false,"hasContent":true},"afterStages":[{"name":"monkeypatch::0","time":{"start":1747041850984,"stop":1747041850984,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false}],"labels":[{"name":"feature","value":"E2E: Create → Delete → (Optional) Verify Delete"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_posts_api"},{"name":"host","value":"PLWRS-PF43AQAR"},{"name":"thread","value":"17100-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_posts_api"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"20f33525800728c9","status":"failed","statusDetails":"AssertionError: assert 404 == 201\n +  where 404 = <Response [404]>.status_code","time":{"start":1747041659759,"stop":1747041659941,"duration":182}},{"uid":"df49c9f770d2868c","status":"failed","statusDetails":"AssertionError: assert 404 == 201\n +  where 404 = <Response [404]>.status_code","time":{"start":1747040769814,"stop":1747040769955,"duration":141}},{"uid":"c7e21b0d1dd73667","status":"failed","statusDetails":"AssertionError: assert 404 == 201\n +  where 404 = <Response [404]>.status_code","time":{"start":1747040634369,"stop":1747040634511,"duration":142}},{"uid":"b84b27346e699f57","status":"failed","statusDetails":"AssertionError: assert 404 == 201\n +  where 404 = <Response [404]>.status_code","time":{"start":1747040450904,"stop":1747040451049,"duration":145}},{"uid":"6604c5276b49d393","status":"failed","statusDetails":"AssertionError: assert 404 == 201\n +  where 404 = <Response [404]>.status_code","time":{"start":1747040367676,"stop":1747040367826,"duration":150}},{"uid":"97ed10a9b5f7392b","status":"failed","statusDetails":"AssertionError: assert 404 == 201\n +  where 404 = <Response [404]>.status_code","time":{"start":1747039552656,"stop":1747039552791,"duration":135}},{"uid":"97d2193426b6d7b7","status":"failed","statusDetails":"AssertionError: assert 404 == 201\n +  where 404 = <Response [404]>.status_code","time":{"start":1747038795323,"stop":1747038795470,"duration":147}},{"uid":"7504258db34bf546","status":"failed","statusDetails":"AssertionError: assert 404 == 201\n +  where 404 = <Response [404]>.status_code","time":{"start":1747038447730,"stop":1747038447870,"duration":140}},{"uid":"6284cb5b25c3ce51","status":"broken","statusDetails":"KeyError: 'api_base_url'","time":{"start":1747038420555,"stop":1747038420555,"duration":0}},{"uid":"41c5c5a465a00864","status":"broken","statusDetails":"KeyError: 'api_base_url'","time":{"start":1747038360301,"stop":1747038360301,"duration":0}},{"uid":"56affa246aa1c0ad","status":"failed","statusDetails":"AssertionError: assert 404 == 201\n +  where 404 = <Response [404]>.status_code","time":{"start":1747037510405,"stop":1747037510549,"duration":144}},{"uid":"aaae74589eaca02f","status":"failed","statusDetails":"AssertionError: assert 404 == 201\n +  where 404 = <Response [404]>.status_code","time":{"start":1747035983726,"stop":1747035983879,"duration":153}},{"uid":"3fff3f1807091e68","status":"failed","statusDetails":"AssertionError: assert 404 == 201\n +  where 404 = <Response [404]>.status_code","time":{"start":1746615263069,"stop":1746615263216,"duration":147}},{"uid":"9839eb325b9f3d15","status":"failed","statusDetails":"AssertionError: assert 404 == 201\n +  where 404 = <Response [404]>.status_code","time":{"start":1746614879177,"stop":1746614879339,"duration":162}}],"categories":[{"name":"Product defects","messageRegex":".*AssertionError.*","matchedStatuses":["failed"]}],"history":{"statistic":{"failed":7,"broken":1,"skipped":0,"passed":0,"unknown":0,"total":8},"items":[{"uid":"d4f3ca76b4e60ce4","status":"failed","statusDetails":"AssertionError: assert 404 == 201\n +  where 404 = <Response [404]>.status_code","time":{"start":1747041659759,"stop":1747041659941,"duration":182}},{"uid":"cf90d0be8aebec4c","status":"failed","statusDetails":"AssertionError: assert 404 == 201\n +  where 404 = <Response [404]>.status_code","time":{"start":1747039552656,"stop":1747039552791,"duration":135}},{"uid":"be2763f96d70e675","status":"failed","statusDetails":"AssertionError: assert 404 == 201\n +  where 404 = <Response [404]>.status_code","time":{"start":1747038795323,"stop":1747038795470,"duration":147}},{"uid":"288524b6a28fa642","status":"failed","statusDetails":"AssertionError: assert 404 == 201\n +  where 404 = <Response [404]>.status_code","time":{"start":1747038447730,"stop":1747038447870,"duration":140}},{"uid":"ca5ae8207eb3df30","status":"broken","statusDetails":"KeyError: 'api_base_url'","time":{"start":1747038360301,"stop":1747038360301,"duration":0}},{"uid":"3710021681528f","status":"failed","statusDetails":"AssertionError: assert 404 == 201\n +  where 404 = <Response [404]>.status_code","time":{"start":1747037510405,"stop":1747037510549,"duration":144}},{"uid":"542f281ec813ba47","status":"failed","statusDetails":"AssertionError: assert 404 == 201\n +  where 404 = <Response [404]>.status_code","time":{"start":1747035983726,"stop":1747035983879,"duration":153}}]},"tags":[]},"source":"a45b53fd348eed.json","parameterValues":[]}