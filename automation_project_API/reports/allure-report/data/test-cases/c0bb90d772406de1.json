{"uid":"c0bb90d772406de1","name":"test_get_nonexistent_user[0]","fullName":"tests.test_users_api#test_get_nonexistent_user","historyId":"17341d05bcd8d58d3f209e9365cb7ce8","time":{"start":1747041851634,"stop":1747041851772,"duration":138},"status":"failed","statusMessage":"AssertionError: assert '<!DOCTYPE ht...y>\\n</html>\\n' == '{}'\n  \n  - {}\n  + <!DOCTYPE html>\n  + <html lang=\"en\">\n  +     <head>\n  +         <!-- Google Tag Manager -->\n  +         <script>...\n  \n  ...Full output truncated (123 lines hidden), use '-vv' to show","statusTrace":"config = {'allure': {'build_name': 'Local Test Run', 'build_order': '1', 'executor_name': 'Local Machine', 'report_name': 'API ...tps://jsonplaceholder.typicode.com/', 'local_flask': 'http://127.0.0.1:5000/api', 'reqres': 'https://reqres.in/'}, ...}\ninvalid_id = 0\n\n    @allure.feature(\"Negative Test - GET /users/{invalid_id}\")\n    @pytest.mark.parametrize(\"invalid_id\", [0, 9999, \"abc\"])\n    def test_get_nonexistent_user(config, invalid_id):\n        client = UserClient(config[\"api_base_url\"])\n        response = client.get_user(invalid_id)\n    \n        with allure.step(f\"Verify 404 for invalid user ID: {invalid_id}\"):\n            assert response.status_code == 404\n>           assert response.text == \"{}\"  # JSONPlaceholder returns an empty object\nE           assert '<!DOCTYPE ht...y>\\n</html>\\n' == '{}'\nE             \nE             - {}\nE             + <!DOCTYPE html>\nE             + <html lang=\"en\">\nE             +     <head>\nE             +         <!-- Google Tag Manager -->\nE             +         <script>...\nE             \nE             ...Full output truncated (123 lines hidden), use '-vv' to show\n\ntests\\test_users_api.py:42: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":14,"retriesStatusChange":true,"beforeStages":[{"name":"config","time":{"start":1747041847645,"stop":1747041847647,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false},{"name":"monkeypatch","time":{"start":1747041851634,"stop":1747041851634,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false},{"name":"_configure_application","time":{"start":1747041851634,"stop":1747041851634,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false},{"name":"_monkeypatch_response_class","time":{"start":1747041851634,"stop":1747041851634,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false},{"name":"_push_request_context","time":{"start":1747041851634,"stop":1747041851634,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert '<!DOCTYPE ht...y>\\n</html>\\n' == '{}'\n  \n  - {}\n  + <!DOCTYPE html>\n  + <html lang=\"en\">\n  +     <head>\n  +         <!-- Google Tag Manager -->\n  +         <script>...\n  \n  ...Full output truncated (123 lines hidden), use '-vv' to show","statusTrace":"config = {'allure': {'build_name': 'Local Test Run', 'build_order': '1', 'executor_name': 'Local Machine', 'report_name': 'API ...tps://jsonplaceholder.typicode.com/', 'local_flask': 'http://127.0.0.1:5000/api', 'reqres': 'https://reqres.in/'}, ...}\ninvalid_id = 0\n\n    @allure.feature(\"Negative Test - GET /users/{invalid_id}\")\n    @pytest.mark.parametrize(\"invalid_id\", [0, 9999, \"abc\"])\n    def test_get_nonexistent_user(config, invalid_id):\n        client = UserClient(config[\"api_base_url\"])\n        response = client.get_user(invalid_id)\n    \n        with allure.step(f\"Verify 404 for invalid user ID: {invalid_id}\"):\n            assert response.status_code == 404\n>           assert response.text == \"{}\"  # JSONPlaceholder returns an empty object\nE           assert '<!DOCTYPE ht...y>\\n</html>\\n' == '{}'\nE             \nE             - {}\nE             + <!DOCTYPE html>\nE             + <html lang=\"en\">\nE             +     <head>\nE             +         <!-- Google Tag Manager -->\nE             +         <script>...\nE             \nE             ...Full output truncated (123 lines hidden), use '-vv' to show\n\ntests\\test_users_api.py:42: AssertionError","steps":[{"name":"Verify 404 for invalid user ID: 0","time":{"start":1747041851770,"stop":1747041851771,"duration":1},"status":"failed","statusMessage":"AssertionError: assert '<!DOCTYPE ht...y>\\n</html>\\n' == '{}'\n  \n  - {}\n  + <!DOCTYPE html>\n  + <html lang=\"en\">\n  +     <head>\n  +         <!-- Google Tag Manager -->\n  +         <script>...\n  \n  ...Full output truncated (123 lines hidden), use '-vv' to show\n","statusTrace":"  File \"C:\\Users\\n.krotsik\\Desktop\\Pytest\\automation_project_API\\tests\\test_users_api.py\", line 42, in test_get_nonexistent_user\n    assert response.text == \"{}\"  # JSONPlaceholder returns an empty object\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"stepsCount":1,"attachmentStep":false,"hasContent":true},"afterStages":[{"name":"monkeypatch::0","time":{"start":1747041851781,"stop":1747041851781,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false}],"labels":[{"name":"feature","value":"Negative Test - GET /users/{invalid_id}"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_users_api"},{"name":"host","value":"PLWRS-PF43AQAR"},{"name":"thread","value":"17100-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_users_api"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"invalid_id","value":"0"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"75a667f43383644e","status":"failed","statusDetails":"AssertionError: assert '<!DOCTYPE ht...y>\\n</html>\\n' == '{}'\n  \n  - {}\n  + <!DOCTYPE html>\n  + <html lang=\"en\">\n  +     <head>\n  +         <!-- Google Tag Manager -->\n  +         <script>...\n  \n  ...Full output truncated (123 lines hidden), use '-vv' to show","time":{"start":1747041660501,"stop":1747041660654,"duration":153}},{"uid":"41eeadf7b5283b7c","status":"failed","statusDetails":"AssertionError: assert '<!DOCTYPE ht...y>\\n</html>\\n' == '{}'\n  \n  - {}\n  + <!DOCTYPE html>\n  + <html lang=\"en\">\n  +     <head>\n  +         <!-- Google Tag Manager -->\n  +         <script>...\n  \n  ...Full output truncated (123 lines hidden), use '-vv' to show","time":{"start":1747040770633,"stop":1747040770779,"duration":146}},{"uid":"884888d91c2aaa28","status":"failed","statusDetails":"AssertionError: assert '<!DOCTYPE ht...y>\\n</html>\\n' == '{}'\n  \n  - {}\n  + <!DOCTYPE html>\n  + <html lang=\"en\">\n  +     <head>\n  +         <!-- Google Tag Manager -->\n  +         <script>...\n  \n  ...Full output truncated (123 lines hidden), use '-vv' to show","time":{"start":1747040635137,"stop":1747040635273,"duration":136}},{"uid":"2d2889a40dda261f","status":"failed","statusDetails":"AssertionError: assert '<!DOCTYPE ht...y>\\n</html>\\n' == '{}'\n  \n  - {}\n  + <!DOCTYPE html>\n  + <html lang=\"en\">\n  +     <head>\n  +         <!-- Google Tag Manager -->\n  +         <script>...\n  \n  ...Full output truncated (123 lines hidden), use '-vv' to show","time":{"start":1747040451687,"stop":1747040451826,"duration":139}},{"uid":"53b965cebee0d323","status":"failed","statusDetails":"AssertionError: assert '<!DOCTYPE ht...y>\\n</html>\\n' == '{}'\n  \n  - {}\n  + <!DOCTYPE html>\n  + <html lang=\"en\">\n  +     <head>\n  +         <!-- Google Tag Manager -->\n  +         <script>...\n  \n  ...Full output truncated (123 lines hidden), use '-vv' to show","time":{"start":1747040368454,"stop":1747040368594,"duration":140}},{"uid":"f60a2de406b44d36","status":"failed","statusDetails":"AssertionError: assert '<!DOCTYPE ht...y>\\n</html>\\n' == '{}'\n  \n  - {}\n  + <!DOCTYPE html>\n  + <html lang=\"en\">\n  +     <head>\n  +         <!-- Google Tag Manager -->\n  +         <script>...\n  \n  ...Full output truncated (123 lines hidden), use '-vv' to show","time":{"start":1747039553413,"stop":1747039553516,"duration":103}},{"uid":"128505513b69669e","status":"failed","statusDetails":"AssertionError: assert '<!DOCTYPE ht...y>\\n</html>\\n' == '{}'\n  \n  - {}\n  + <!DOCTYPE html>\n  + <html lang=\"en\">\n  +     <head>\n  +         <!-- Google Tag Manager -->\n  +         <script>...\n  \n  ...Full output truncated (123 lines hidden), use '-vv' to show","time":{"start":1747038796118,"stop":1747038796271,"duration":153}},{"uid":"306c33aba08184e0","status":"failed","statusDetails":"AssertionError: assert '<!DOCTYPE ht...y>\\n</html>\\n' == '{}'\n  \n  - {}\n  + <!DOCTYPE html>\n  + <html lang=\"en\">\n  +     <head>\n  +         <!-- Google Tag Manager -->\n  +         <script>...\n  \n  ...Full output truncated (123 lines hidden), use '-vv' to show","time":{"start":1747038448534,"stop":1747038448679,"duration":145}},{"uid":"8cf3bd5674e57f9e","status":"broken","statusDetails":"KeyError: 'api_base_url'","time":{"start":1747038420652,"stop":1747038420652,"duration":0}},{"uid":"808955754c030277","status":"broken","statusDetails":"KeyError: 'api_base_url'","time":{"start":1747038360368,"stop":1747038360368,"duration":0}},{"uid":"8991b8875695fa2d","status":"failed","statusDetails":"AssertionError: assert '<!DOCTYPE ht...y>\\n</html>\\n' == '{}'\n  \n  - {}\n  + <!DOCTYPE html>\n  + <html lang=\"en\">\n  +     <head>\n  +         <!-- Google Tag Manager -->\n  +         <script>...\n  \n  ...Full output truncated (123 lines hidden), use '-vv' to show","time":{"start":1747037511186,"stop":1747037511327,"duration":141}},{"uid":"eadd3f42fe4707a3","status":"failed","statusDetails":"AssertionError: assert '<!DOCTYPE ht...y>\\n</html>\\n' == '{}'\n  \n  - {}\n  + <!DOCTYPE html>\n  + <html lang=\"en\">\n  +     <head>\n  +         <!-- Google Tag Manager -->\n  +         <script>...\n  \n  ...Full output truncated (123 lines hidden), use '-vv' to show","time":{"start":1747035984541,"stop":1747035984691,"duration":150}},{"uid":"a05e122925e32ecc","status":"failed","statusDetails":"AssertionError: assert '<!DOCTYPE ht...y>\\n</html>\\n' == '{}'\n  \n  - {}\n  + <!DOCTYPE html>\n  + <html lang=\"en\">\n  +     <head>\n  +         <!-- Google Tag Manager -->\n  +         <script>...\n  \n  ...Full output truncated (123 lines hidden), use '-vv' to show","time":{"start":1746615263877,"stop":1746615264035,"duration":158}},{"uid":"8aecb5c28e3c8ce5","status":"failed","statusDetails":"AssertionError: assert '<!DOCTYPE ht...y>\\n</html>\\n' == '{}'\n  \n  - {}\n  + <!DOCTYPE html>\n  + <html lang=\"en\">\n  +     <head>\n  +         <!-- Google Tag Manager -->\n  +         <script>...\n  \n  ...Full output truncated (123 lines hidden), use '-vv' to show","time":{"start":1746614880010,"stop":1746614880156,"duration":146}}],"categories":[{"name":"Product defects","messageRegex":".*AssertionError.*","matchedStatuses":["failed"]}],"history":{"statistic":{"failed":7,"broken":1,"skipped":0,"passed":0,"unknown":0,"total":8},"items":[{"uid":"79f50476491af91e","status":"failed","statusDetails":"AssertionError: assert '<!DOCTYPE ht...y>\\n</html>\\n' == '{}'\n  \n  - {}\n  + <!DOCTYPE html>\n  + <html lang=\"en\">\n  +     <head>\n  +         <!-- Google Tag Manager -->\n  +         <script>...\n  \n  ...Full output truncated (123 lines hidden), use '-vv' to show","time":{"start":1747041660501,"stop":1747041660654,"duration":153}},{"uid":"b6173551f8011de","status":"failed","statusDetails":"AssertionError: assert '<!DOCTYPE ht...y>\\n</html>\\n' == '{}'\n  \n  - {}\n  + <!DOCTYPE html>\n  + <html lang=\"en\">\n  +     <head>\n  +         <!-- Google Tag Manager -->\n  +         <script>...\n  \n  ...Full output truncated (123 lines hidden), use '-vv' to show","time":{"start":1747039553413,"stop":1747039553516,"duration":103}},{"uid":"c5ea5f28eb0e9b45","status":"failed","statusDetails":"AssertionError: assert '<!DOCTYPE ht...y>\\n</html>\\n' == '{}'\n  \n  - {}\n  + <!DOCTYPE html>\n  + <html lang=\"en\">\n  +     <head>\n  +         <!-- Google Tag Manager -->\n  +         <script>...\n  \n  ...Full output truncated (123 lines hidden), use '-vv' to show","time":{"start":1747038796118,"stop":1747038796271,"duration":153}},{"uid":"2df22872c0973391","status":"failed","statusDetails":"AssertionError: assert '<!DOCTYPE ht...y>\\n</html>\\n' == '{}'\n  \n  - {}\n  + <!DOCTYPE html>\n  + <html lang=\"en\">\n  +     <head>\n  +         <!-- Google Tag Manager -->\n  +         <script>...\n  \n  ...Full output truncated (123 lines hidden), use '-vv' to show","time":{"start":1747038448534,"stop":1747038448679,"duration":145}},{"uid":"90e12ab3f1b4f48f","status":"broken","statusDetails":"KeyError: 'api_base_url'","time":{"start":1747038360368,"stop":1747038360368,"duration":0}},{"uid":"ac06716a9bd5901b","status":"failed","statusDetails":"AssertionError: assert '<!DOCTYPE ht...y>\\n</html>\\n' == '{}'\n  \n  - {}\n  + <!DOCTYPE html>\n  + <html lang=\"en\">\n  +     <head>\n  +         <!-- Google Tag Manager -->\n  +         <script>...\n  \n  ...Full output truncated (123 lines hidden), use '-vv' to show","time":{"start":1747037511186,"stop":1747037511327,"duration":141}},{"uid":"e4a8f91f81994c54","status":"failed","statusDetails":"AssertionError: assert '<!DOCTYPE ht...y>\\n</html>\\n' == '{}'\n  \n  - {}\n  + <!DOCTYPE html>\n  + <html lang=\"en\">\n  +     <head>\n  +         <!-- Google Tag Manager -->\n  +         <script>...\n  \n  ...Full output truncated (123 lines hidden), use '-vv' to show","time":{"start":1747035984541,"stop":1747035984691,"duration":150}}]},"tags":[]},"source":"c0bb90d772406de1.json","parameterValues":["0"]}