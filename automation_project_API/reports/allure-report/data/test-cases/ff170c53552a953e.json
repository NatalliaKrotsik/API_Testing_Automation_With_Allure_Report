{"uid":"ff170c53552a953e","name":"test_get_nonexistent_user[abc]","fullName":"tests.test_users_api#test_get_nonexistent_user","historyId":"8877987d12bf311dc3da4784099860a0","time":{"start":1747041851964,"stop":1747041852129,"duration":165},"status":"failed","statusMessage":"AssertionError: assert '<!DOCTYPE ht...y>\\n</html>\\n' == '{}'\n  \n  - {}\n  + <!DOCTYPE html>\n  + <html lang=\"en\">\n  +     <head>\n  +         <!-- Google Tag Manager -->\n  +         <script>...\n  \n  ...Full output truncated (123 lines hidden), use '-vv' to show","statusTrace":"config = {'allure': {'build_name': 'Local Test Run', 'build_order': '1', 'executor_name': 'Local Machine', 'report_name': 'API ...tps://jsonplaceholder.typicode.com/', 'local_flask': 'http://127.0.0.1:5000/api', 'reqres': 'https://reqres.in/'}, ...}\ninvalid_id = 'abc'\n\n    @allure.feature(\"Negative Test - GET /users/{invalid_id}\")\n    @pytest.mark.parametrize(\"invalid_id\", [0, 9999, \"abc\"])\n    def test_get_nonexistent_user(config, invalid_id):\n        client = UserClient(config[\"api_base_url\"])\n        response = client.get_user(invalid_id)\n    \n        with allure.step(f\"Verify 404 for invalid user ID: {invalid_id}\"):\n            assert response.status_code == 404\n>           assert response.text == \"{}\"  # JSONPlaceholder returns an empty object\nE           assert '<!DOCTYPE ht...y>\\n</html>\\n' == '{}'\nE             \nE             - {}\nE             + <!DOCTYPE html>\nE             + <html lang=\"en\">\nE             +     <head>\nE             +         <!-- Google Tag Manager -->\nE             +         <script>...\nE             \nE             ...Full output truncated (123 lines hidden), use '-vv' to show\n\ntests\\test_users_api.py:42: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":14,"retriesStatusChange":true,"beforeStages":[{"name":"config","time":{"start":1747041847645,"stop":1747041847647,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false},{"name":"monkeypatch","time":{"start":1747041851963,"stop":1747041851964,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false},{"name":"_configure_application","time":{"start":1747041851964,"stop":1747041851964,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false},{"name":"_monkeypatch_response_class","time":{"start":1747041851964,"stop":1747041851964,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false},{"name":"_push_request_context","time":{"start":1747041851964,"stop":1747041851964,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert '<!DOCTYPE ht...y>\\n</html>\\n' == '{}'\n  \n  - {}\n  + <!DOCTYPE html>\n  + <html lang=\"en\">\n  +     <head>\n  +         <!-- Google Tag Manager -->\n  +         <script>...\n  \n  ...Full output truncated (123 lines hidden), use '-vv' to show","statusTrace":"config = {'allure': {'build_name': 'Local Test Run', 'build_order': '1', 'executor_name': 'Local Machine', 'report_name': 'API ...tps://jsonplaceholder.typicode.com/', 'local_flask': 'http://127.0.0.1:5000/api', 'reqres': 'https://reqres.in/'}, ...}\ninvalid_id = 'abc'\n\n    @allure.feature(\"Negative Test - GET /users/{invalid_id}\")\n    @pytest.mark.parametrize(\"invalid_id\", [0, 9999, \"abc\"])\n    def test_get_nonexistent_user(config, invalid_id):\n        client = UserClient(config[\"api_base_url\"])\n        response = client.get_user(invalid_id)\n    \n        with allure.step(f\"Verify 404 for invalid user ID: {invalid_id}\"):\n            assert response.status_code == 404\n>           assert response.text == \"{}\"  # JSONPlaceholder returns an empty object\nE           assert '<!DOCTYPE ht...y>\\n</html>\\n' == '{}'\nE             \nE             - {}\nE             + <!DOCTYPE html>\nE             + <html lang=\"en\">\nE             +     <head>\nE             +         <!-- Google Tag Manager -->\nE             +         <script>...\nE             \nE             ...Full output truncated (123 lines hidden), use '-vv' to show\n\ntests\\test_users_api.py:42: AssertionError","steps":[{"name":"Verify 404 for invalid user ID: abc","time":{"start":1747041852126,"stop":1747041852128,"duration":2},"status":"failed","statusMessage":"AssertionError: assert '<!DOCTYPE ht...y>\\n</html>\\n' == '{}'\n  \n  - {}\n  + <!DOCTYPE html>\n  + <html lang=\"en\">\n  +     <head>\n  +         <!-- Google Tag Manager -->\n  +         <script>...\n  \n  ...Full output truncated (123 lines hidden), use '-vv' to show\n","statusTrace":"  File \"C:\\Users\\n.krotsik\\Desktop\\Pytest\\automation_project_API\\tests\\test_users_api.py\", line 42, in test_get_nonexistent_user\n    assert response.text == \"{}\"  # JSONPlaceholder returns an empty object\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"stepsCount":1,"attachmentStep":false,"hasContent":true},"afterStages":[{"name":"monkeypatch::0","time":{"start":1747041852137,"stop":1747041852137,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false}],"labels":[{"name":"feature","value":"Negative Test - GET /users/{invalid_id}"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_users_api"},{"name":"host","value":"PLWRS-PF43AQAR"},{"name":"thread","value":"17100-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_users_api"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"invalid_id","value":"'abc'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"eb1c9645ecb77485","status":"failed","statusDetails":"AssertionError: assert '<!DOCTYPE ht...y>\\n</html>\\n' == '{}'\n  \n  - {}\n  + <!DOCTYPE html>\n  + <html lang=\"en\">\n  +     <head>\n  +         <!-- Google Tag Manager -->\n  +         <script>...\n  \n  ...Full output truncated (123 lines hidden), use '-vv' to show","time":{"start":1747041660813,"stop":1747041660997,"duration":184}},{"uid":"5c603487fc184329","status":"failed","statusDetails":"AssertionError: assert '<!DOCTYPE ht...y>\\n</html>\\n' == '{}'\n  \n  - {}\n  + <!DOCTYPE html>\n  + <html lang=\"en\">\n  +     <head>\n  +         <!-- Google Tag Manager -->\n  +         <script>...\n  \n  ...Full output truncated (123 lines hidden), use '-vv' to show","time":{"start":1747040770966,"stop":1747040771107,"duration":141}},{"uid":"78db22662bf498a8","status":"failed","statusDetails":"AssertionError: assert '<!DOCTYPE ht...y>\\n</html>\\n' == '{}'\n  \n  - {}\n  + <!DOCTYPE html>\n  + <html lang=\"en\">\n  +     <head>\n  +         <!-- Google Tag Manager -->\n  +         <script>...\n  \n  ...Full output truncated (123 lines hidden), use '-vv' to show","time":{"start":1747040635440,"stop":1747040635591,"duration":151}},{"uid":"348e35ef05ba86e7","status":"failed","statusDetails":"AssertionError: assert '<!DOCTYPE ht...y>\\n</html>\\n' == '{}'\n  \n  - {}\n  + <!DOCTYPE html>\n  + <html lang=\"en\">\n  +     <head>\n  +         <!-- Google Tag Manager -->\n  +         <script>...\n  \n  ...Full output truncated (123 lines hidden), use '-vv' to show","time":{"start":1747040451987,"stop":1747040452133,"duration":146}},{"uid":"441695083edd2af0","status":"failed","statusDetails":"AssertionError: assert '<!DOCTYPE ht...y>\\n</html>\\n' == '{}'\n  \n  - {}\n  + <!DOCTYPE html>\n  + <html lang=\"en\">\n  +     <head>\n  +         <!-- Google Tag Manager -->\n  +         <script>...\n  \n  ...Full output truncated (123 lines hidden), use '-vv' to show","time":{"start":1747040368758,"stop":1747040368898,"duration":140}},{"uid":"124c4a027cc03efe","status":"failed","statusDetails":"AssertionError: assert '<!DOCTYPE ht...y>\\n</html>\\n' == '{}'\n  \n  - {}\n  + <!DOCTYPE html>\n  + <html lang=\"en\">\n  +     <head>\n  +         <!-- Google Tag Manager -->\n  +         <script>...\n  \n  ...Full output truncated (123 lines hidden), use '-vv' to show","time":{"start":1747039553708,"stop":1747039553830,"duration":122}},{"uid":"72354b7917802832","status":"failed","statusDetails":"AssertionError: assert '<!DOCTYPE ht...y>\\n</html>\\n' == '{}'\n  \n  - {}\n  + <!DOCTYPE html>\n  + <html lang=\"en\">\n  +     <head>\n  +         <!-- Google Tag Manager -->\n  +         <script>...\n  \n  ...Full output truncated (123 lines hidden), use '-vv' to show","time":{"start":1747038796441,"stop":1747038796670,"duration":229}},{"uid":"818155c2563dfe68","status":"failed","statusDetails":"AssertionError: assert '<!DOCTYPE ht...y>\\n</html>\\n' == '{}'\n  \n  - {}\n  + <!DOCTYPE html>\n  + <html lang=\"en\">\n  +     <head>\n  +         <!-- Google Tag Manager -->\n  +         <script>...\n  \n  ...Full output truncated (123 lines hidden), use '-vv' to show","time":{"start":1747038448840,"stop":1747038448990,"duration":150}},{"uid":"32bd5de5c3934e8c","status":"broken","statusDetails":"KeyError: 'api_base_url'","time":{"start":1747038420681,"stop":1747038420682,"duration":1}},{"uid":"876e2141ceb3be5","status":"broken","statusDetails":"KeyError: 'api_base_url'","time":{"start":1747038360400,"stop":1747038360400,"duration":0}},{"uid":"4a58640436c37e68","status":"failed","statusDetails":"AssertionError: assert '<!DOCTYPE ht...y>\\n</html>\\n' == '{}'\n  \n  - {}\n  + <!DOCTYPE html>\n  + <html lang=\"en\">\n  +     <head>\n  +         <!-- Google Tag Manager -->\n  +         <script>...\n  \n  ...Full output truncated (123 lines hidden), use '-vv' to show","time":{"start":1747037511490,"stop":1747037511630,"duration":140}},{"uid":"28d5953a0b19c3ff","status":"failed","statusDetails":"AssertionError: assert '<!DOCTYPE ht...y>\\n</html>\\n' == '{}'\n  \n  - {}\n  + <!DOCTYPE html>\n  + <html lang=\"en\">\n  +     <head>\n  +         <!-- Google Tag Manager -->\n  +         <script>...\n  \n  ...Full output truncated (123 lines hidden), use '-vv' to show","time":{"start":1747035984874,"stop":1747035985027,"duration":153}},{"uid":"53ad6376a34e06ba","status":"failed","statusDetails":"AssertionError: assert '<!DOCTYPE ht...y>\\n</html>\\n' == '{}'\n  \n  - {}\n  + <!DOCTYPE html>\n  + <html lang=\"en\">\n  +     <head>\n  +         <!-- Google Tag Manager -->\n  +         <script>...\n  \n  ...Full output truncated (123 lines hidden), use '-vv' to show","time":{"start":1746615264218,"stop":1746615264362,"duration":144}},{"uid":"7f09e4f9114fdc60","status":"failed","statusDetails":"AssertionError: assert '<!DOCTYPE ht...y>\\n</html>\\n' == '{}'\n  \n  - {}\n  + <!DOCTYPE html>\n  + <html lang=\"en\">\n  +     <head>\n  +         <!-- Google Tag Manager -->\n  +         <script>...\n  \n  ...Full output truncated (123 lines hidden), use '-vv' to show","time":{"start":1746614880339,"stop":1746614880475,"duration":136}}],"categories":[{"name":"Product defects","messageRegex":".*AssertionError.*","matchedStatuses":["failed"]}],"history":{"statistic":{"failed":7,"broken":1,"skipped":0,"passed":0,"unknown":0,"total":8},"items":[{"uid":"c7433f8346607673","status":"failed","statusDetails":"AssertionError: assert '<!DOCTYPE ht...y>\\n</html>\\n' == '{}'\n  \n  - {}\n  + <!DOCTYPE html>\n  + <html lang=\"en\">\n  +     <head>\n  +         <!-- Google Tag Manager -->\n  +         <script>...\n  \n  ...Full output truncated (123 lines hidden), use '-vv' to show","time":{"start":1747041660813,"stop":1747041660997,"duration":184}},{"uid":"2f6493dbb40a6578","status":"failed","statusDetails":"AssertionError: assert '<!DOCTYPE ht...y>\\n</html>\\n' == '{}'\n  \n  - {}\n  + <!DOCTYPE html>\n  + <html lang=\"en\">\n  +     <head>\n  +         <!-- Google Tag Manager -->\n  +         <script>...\n  \n  ...Full output truncated (123 lines hidden), use '-vv' to show","time":{"start":1747039553708,"stop":1747039553830,"duration":122}},{"uid":"38e1ce1071177fd4","status":"failed","statusDetails":"AssertionError: assert '<!DOCTYPE ht...y>\\n</html>\\n' == '{}'\n  \n  - {}\n  + <!DOCTYPE html>\n  + <html lang=\"en\">\n  +     <head>\n  +         <!-- Google Tag Manager -->\n  +         <script>...\n  \n  ...Full output truncated (123 lines hidden), use '-vv' to show","time":{"start":1747038796441,"stop":1747038796670,"duration":229}},{"uid":"af11337f450c3956","status":"failed","statusDetails":"AssertionError: assert '<!DOCTYPE ht...y>\\n</html>\\n' == '{}'\n  \n  - {}\n  + <!DOCTYPE html>\n  + <html lang=\"en\">\n  +     <head>\n  +         <!-- Google Tag Manager -->\n  +         <script>...\n  \n  ...Full output truncated (123 lines hidden), use '-vv' to show","time":{"start":1747038448840,"stop":1747038448990,"duration":150}},{"uid":"ee3fc2e64ab29e53","status":"broken","statusDetails":"KeyError: 'api_base_url'","time":{"start":1747038360400,"stop":1747038360400,"duration":0}},{"uid":"6accbfcbfcd9ef9d","status":"failed","statusDetails":"AssertionError: assert '<!DOCTYPE ht...y>\\n</html>\\n' == '{}'\n  \n  - {}\n  + <!DOCTYPE html>\n  + <html lang=\"en\">\n  +     <head>\n  +         <!-- Google Tag Manager -->\n  +         <script>...\n  \n  ...Full output truncated (123 lines hidden), use '-vv' to show","time":{"start":1747037511490,"stop":1747037511630,"duration":140}},{"uid":"4ad94165f7892f17","status":"failed","statusDetails":"AssertionError: assert '<!DOCTYPE ht...y>\\n</html>\\n' == '{}'\n  \n  - {}\n  + <!DOCTYPE html>\n  + <html lang=\"en\">\n  +     <head>\n  +         <!-- Google Tag Manager -->\n  +         <script>...\n  \n  ...Full output truncated (123 lines hidden), use '-vv' to show","time":{"start":1747035984874,"stop":1747035985027,"duration":153}}]},"tags":[]},"source":"ff170c53552a953e.json","parameterValues":["'abc'"]}